app = angular.module('levels', [])

app.factory('levelStates', [ ()->
  @state_classes = 
    'launched': 'fa-rocket',
    'ready': 'fa-cubes',
    'running': 'fa-spin fa-cog',
    'stopped': 'fa-moon-o'
  
  stateClass: (state) =>
    if state?
      @state_classes[state]
    else
      'fa-star'
])

app.controller('MonitorController', [ '$scope', '$http', ($scope, $http)->

  $scope.levels = []
  @sending = false

  @loadLevelInfo = () ->
    $http.get('/admin/api/v1/levels.json').success (data) ->
      $scope.levels = data

  $scope.addLevel = () ->
    $scope.levels.unshift({})

  @removeLevel = (level) ->
    index = $scope.levels.findIndex (item) ->
      item.name == level.name
    if index != -1
      $scope.levels.splice(index, 1)

  @loadLevelInfo()
])

app.controller('LevelPanelController', [ '$scope', '$http', 'levelStates', ($scope, $http, levelStates) ->

  @config_files = []
  
  $scope.stateClass = () =>
    levelStates.stateClass($scope.level.state)
    
  @loadConfigFiles = () ->
    $http.get('/admin/api/v1/config_files.json').success (data) =>
      @config_files = data

  # TODO move to model
  $scope.hasState = (state) ->
    if typeof(state) == 'string'
      $scope.level.state is state
    else
      state.indexOf($scope.level.state) > -1

  $scope.launchLevel = () =>
    if $scope.launchForm.$valid
      @sending = 'launch'
      $http.post('/admin/api/v1/levels.json', {level: {name: $scope.new_level_name}})
        .success(@updateLevel)

  $scope.buildLevel = () =>
    if $scope.buildForm.$valid
      @sending = 'build'
      $http.put('/admin/api/v1/levels/'+$scope.level.id+'/build.json', {level: {config: $scope.level.config_file}})
        .success(@updateLevel)

  $scope.runLevel = () =>
    @sending = 'run'
    $http.put('/admin/api/v1/levels/'+$scope.level.id+'/run.json')
      .success(@updateLevel)

  $scope.stopLevel = () =>
    @sending = 'stop'
    $http.put('/admin/api/v1/levels/'+$scope.level.id+'/stop.json')
      .success(@updateLevel)

  $scope.joinLevel = () =>
    @sending = 'join'
    $http.put('/admin/api/v1/levels/'+$scope.level.id+'/join.json')
      .success (data) ->
        window.location.href = '/levels/'+$scope.level.id+'/map.html'

  @updateLevel = (data) =>
    $scope.level = data
    @sending = false

  $scope.removeLevel = () =>
    @sending = 'remove'
    $http.delete('/admin/api/v1/levels/'+$scope.level.id)
      .success (data) =>
        $scope.monitorCtrl.removeLevel($scope.level)
        @sending = false


  $scope.buttonIcon = (icon, action) =>
    classes = {'fa-spin': @sending == action, 'fa-spinner': @sending == action}
    classes[icon] = @sending != action
    classes
      
  $scope.cannotSubmit = (form) =>
    @sending || form.$invalid

  @loadConfigFiles()

])

app.directive('createLevelButton', ->
  restrict: 'E',
  templateUrl: '<%= asset_path("create_level_button.html") %>'
)

app.directive('newLevelForm', ->
  restrict: 'E',
  templateUrl: '<%= asset_path("new_level_form.html") %>',
  link: () ->
    $('#level_name').focus()
)

app.directive('levelActions', ->
  restrict: 'E',
  templateUrl: '<%= asset_path("level_actions.html") %>'
)

app.directive('buildLevelForm', ->
  restrict: 'E',
  templateUrl: '<%= asset_path("build_level_form.html") %>'
)

app.directive('actionIcon', ->
  restrict: 'A',
  template: "'ng-class' => \"{'fa-power-off': !panelCtrl.sending, 'fa-spin': panelCtrl.sending, 'fa-spinner': panelCtrl.sending}\"}'"
)
