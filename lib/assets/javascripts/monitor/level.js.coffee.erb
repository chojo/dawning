app = angular.module('levels', ['ngResource'])

app.factory('levelStates', [ ()->
  @state_classes = 
    'launched': 'fa-rocket',
    'ready': 'fa-cubes',
    'running': 'fa-spin fa-cog',
    'stopped': 'fa-moon-o'
  
  stateClass: (state) =>
    if state?
      @state_classes[state]
    else
      'fa-star'
])

app.factory('levelConfigs', [ '$q', '$http', '$log', ($q, $http, $log) ->
  
  all: () ->
    @future = $q.defer()
    $http.get('/admin/api/v1/config_files.json')
      .success (data) =>
        @future.resolve(data)
      .error (data, status, headers, config) =>
        $log.warn(data, status, headers(), config)
        @future.reject("Error while loading config files status: #{status}")
    @future.promise
  
])

app.factory('levelResource', ['$resource', ($resource) ->
  base_url = '/admin/api/v1/levels/:id'
  $resource base_url , {id: '@id'}, 
    launch:
      method: 'POST'
    build:
      method: 'PUT'
      url: base_url + '/build.json'
    run:
      method: 'PUT'
      url: base_url + '/run.json'
    stop:
      method: 'PUT'
      url: base_url + '/stop.json'
    join:
      method: 'PUT'
      url: base_url + '/join.json'
    
])

app.controller('MonitorController', [ '$scope', '$http', 'levelResource', ($scope, $http, levelResource)->

  $scope.levels = levelResource.query()
  
  @loadLevelInfo = () ->
    $scope.levels = levelResource.query()

  $scope.addLevel = () ->
    $scope.levels.unshift({})

  @removeLevel = (level) ->
    index = $scope.levels.findIndex (item) ->
      item.name == level.name
    if index != -1
      $scope.levels.splice(index, 1)

])

app.controller('LevelPanelController', [ '$scope', '$http', 'levelStates', 'levelConfigs', 'levelResource', ($scope, $http, levelStates, levelConfigs, levelResource) ->

  levelConfigs.all().then (data) =>
    @config_files = data
  , (error) =>
    console.log(error)
  
  $scope.stateClass = () =>
    levelStates.stateClass($scope.level.state)
    
  
  # TODO move to model
  $scope.hasState = (state) ->
    if typeof(state) == 'string'
      $scope.level.state is state
    else
      state.indexOf($scope.level.state) > -1

  $scope.launchLevel = () =>
    if $scope.launchForm.$valid
      @sending = 'launch'
      $scope.level = levelResource.launch({level: {name: $scope.new_level_name}})

  $scope.buildLevel = () =>
    if $scope.buildForm.$valid
      @sending = 'build'
      console.log($scope.level)
      $scope.level.$build({level: {config: $scope.level.config_file}})

  $scope.runLevel = () =>
    @sending = 'run'
    $http.put('/admin/api/v1/levels/'+$scope.level.id+'/run.json')
      .success(@updateLevel)

  $scope.stopLevel = () =>
    @sending = 'stop'
    $http.put('/admin/api/v1/levels/'+$scope.level.id+'/stop.json')
      .success(@updateLevel)

  $scope.joinLevel = () =>
    @sending = 'join'
    $http.put('/admin/api/v1/levels/'+$scope.level.id+'/join.json')
      .success (data) ->
        window.location.href = '/levels/'+$scope.level.id+'/map.html'

  @updateLevel = (data) =>
    $scope.level = data
    @resetSending()
    
  @resetSending = () =>
    @sending = false

  $scope.removeLevel = () =>
    @sending = 'remove'
    $http.delete('/admin/api/v1/levels/'+$scope.level.id)
      .success (data) =>
        $scope.monitorCtrl.removeLevel($scope.level)
        @sending = false


  $scope.buttonIcon = (icon, action) =>
    resolving = $scope.level.$resolved == false && @sending == action
    classes = {'fa-spin': resolving , 'fa-spinner': resolving }
    classes[icon] = @sending != action
    classes
      
  $scope.cannotSubmit = (form) =>
    $scope.level.$resolved == false || form.$invalid

])

app.directive('createLevelButton', ->
  restrict: 'E',
  templateUrl: '<%= asset_path("create_level_button.html") %>'
)

app.directive('newLevelForm', ->
  restrict: 'E',
  templateUrl: '<%= asset_path("new_level_form.html") %>',
  link: () ->
    $('#level_name').focus()
)

app.directive('levelActions', ->
  restrict: 'E',
  templateUrl: '<%= asset_path("level_actions.html") %>'
)

app.directive('buildLevelForm', ->
  restrict: 'E',
  templateUrl: '<%= asset_path("build_level_form.html") %>'
)

app.directive('actionIcon', ->
  restrict: 'A',
  template: "'ng-class' => \"{'fa-power-off': !panelCtrl.sending, 'fa-spin': panelCtrl.sending, 'fa-spinner': panelCtrl.sending}\"}'"
)
